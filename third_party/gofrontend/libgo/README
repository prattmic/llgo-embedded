See ../README.

This is the runtime support library for the Go programming language.
This library is intended for use with the Go frontend.

This library should not be stripped when it is installed.  Go code
relies on being able to look up file/line information, which comes
from the debugging info using the libbacktrace library.

The library has only been tested on GNU/Linux using glibc, and on
Solaris.  It should not be difficult to port to other operating
systems.

Directories:

go
  A copy of the Go library from http://golang.org/, with several
  changes for gccgo.

runtime
  Runtime functions, written in C, which are called directly by the
  compiler or by the library.

Contributing
============

To contribute patches to the files in this directory, please see
http://golang.org/doc/gccgo_contribute.html .

The master copy of these files is hosted at
http://code.google.com/p/gofrontend .  Changes to these files require
signing a Google contributor license agreement.  If you are the
copyright holder, you will need to agree to the individual contributor
license agreement at
http://code.google.com/legal/individual-cla-v1.0.html.  This agreement
can be completed online.

If your organization is the copyright holder, the organization will
need to agree to the corporate contributor license agreement at
http://code.google.com/legal/corporate-cla-v1.0.html.

If the copyright holder for your code has already completed the
agreement in connection with another Google open source project, it
does not need to be completed again.

Regenerating Makefiles
======================

Use *exactly* autoconf 2.65 and libtool 2.2.8.  Run `autoreconf -fi`.

Building for arm-none-eabi
==========================

`LLVM_BUILD_DIR` is the directory you built LLVM in, and `LLVM_INSTALL_DIR`
is the directory it installed to.

This will generate libgobegin.a (contains main) and .libs/libgo-runtime.a:

    $ mkdir build && cd build
    $ ../configure CC="env REAL_CC=${LLVM_INSTALL_DIR}/bin/clang ${LLVM_BUILD_DIR}/bin/cc-wrapper" CFLAGS="--target=arm-none-eabi -mcpu=cortex-m4 -nostdlib" --host=arm-none-eabi --without-libffi --without-stack-split
    $ make libgo-runtime.la libgobegin.a -j4

You will also want libbacktrace.a:

    $ cd ../libbacktrace
    $ mkdir build && cd build
    $ ../configure CC="env REAL_CC=${LLVM_INSTALL_DIR}/bin/clang ${LLVM_BUILD_DIR}/bin/cc-wrapper" CFLAGS="--target=arm-none-eabi -mcpu=cortex-m4 -nostdlib" --host=arm-none-eabi
    $ make -j4

Build an object that contains _start and link it with the magic:

    $ clang --target=arm-none-eabi hello.o ./build/libgobegin.a ./build/.libs/libgo-runtime.a ../libbacktrace/build/.libs/libbacktrace.a -nostdlib -lgcc
